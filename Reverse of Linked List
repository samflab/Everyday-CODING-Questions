Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL

CODE
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *current = new ListNode;
        ListNode *previous = new ListNode;
        ListNode *forward = new ListNode;
        
        previous = NULL;
        current=head;
        //forward=current->next;
        
        
        while(current != NULL)
        {
            //previous->next=current;
            
            forward=current->next;
            current->next=previous;
            previous = current;
            current=forward;
        }
        return previous;
    }
};
